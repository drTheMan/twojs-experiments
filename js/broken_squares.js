// Generated by CoffeeScript 1.6.3
(function() {
  var BrokenSquare, BrokenSquares,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.BrokenSquaresOps = (function(_super) {
    __extends(BrokenSquaresOps, _super);

    function BrokenSquaresOps(_opts) {
      this.options = _opts;
      this.init();
    }

    BrokenSquaresOps.prototype.init = function() {
      this.destroy();
      this.target = this.options.target || this.options.brokenSqaures || this.options.broken_squares || new BrokenSquares({
        two: this.options.two
      });
      this.two = this.target.two;
      return this.target.on('destroy', (function() {
        return this.destroy();
      }), this);
    };

    BrokenSquaresOps.prototype.destroy = function() {
      return this.target = this.two = void 0;
    };

    return BrokenSquaresOps;

  })(Backbone.Model);

  BrokenSquares = (function(_super) {
    __extends(BrokenSquares, _super);

    function BrokenSquares(_opts) {
      this.options = _opts;
      this.two = _opts.two;
      this.init();
    }

    BrokenSquares.prototype.init = function() {
      this.destroy();
      this.group = this.two.makeGroup();
      this.group.translation.set(100, 100);
      return new BrokenSquare({
        two: this.two
      }).group.addTo(this.group);
    };

    BrokenSquares.prototype.destroy = function() {
      this.trigger('destroy', this);
      if (this.group) {
        this.two.remove(this.group);
        return this.group = void 0;
      }
    };

    return BrokenSquares;

  })(Backbone.Model);

  BrokenSquare = (function(_super) {
    __extends(BrokenSquare, _super);

    function BrokenSquare(_opts) {
      this.options = _opts;
      this.two = _opts.two;
      this.init();
    }

    BrokenSquare.prototype.init = function() {
      var _this = this;
      this.destroy();
      this.group = this.two.makeGroup();
      this.group.translation.set(0, 0);
      this.triangles = this._createTriangles();
      _.each(this.triangles, function(triangle) {
        return triangle.addTo(_this.group);
      });
      this.group.fill = '#FFFFFF';
      return this.group.noStroke();
    };

    BrokenSquare.prototype.destroy = function() {
      var _this = this;
      this.trigger('destroy');
      if (this.triangles) {
        _.each(this.triangles, function(triangle) {
          return _this.two.remove(triangle);
        });
        this.triangles = void 0;
      }
      if (this.group) {
        this.two.remove(this.group);
        return this.group = void 0;
      }
    };

    BrokenSquare.prototype._width = function() {
      return this.options.width || 100;
    };

    BrokenSquare.prototype._height = function() {
      return this.options.height || 100;
    };

    BrokenSquare.prototype._coords = function() {
      return [new Two.Anchor(0, 0), new Two.Anchor(this._width() / 2, 0), new Two.Anchor(this._width(), 0), new Two.Anchor(0, this._height() / 2), new Two.Anchor(this._width() / 2, this._height() / 2), new Two.Anchor(this._width(), this._height() / 2), new Two.Anchor(0, this._height()), new Two.Anchor(this._width() / 2, this._height()), new Two.Anchor(this._width(), this._height())];
    };

    BrokenSquare.prototype._createTriangles = function() {
      var coords;
      coords = this._coords();
      return [new Two.Polygon([coords[0], coords[4], coords[3]], false, false), new Two.Polygon([coords[0], coords[1], coords[4]], false, false), new Two.Polygon([coords[1], coords[2], coords[4]], false, false), new Two.Polygon([coords[2], coords[4], coords[5]], false, false), new Two.Polygon([coords[3], coords[4], coords[6]], false, false), new Two.Polygon([coords[4], coords[6], coords[7]], false, false), new Two.Polygon([coords[4], coords[7], coords[8]], false, false), new Two.Polygon([coords[4], coords[5], coords[8]], false, false)];
    };

    return BrokenSquare;

  })(Backbone.Model);

}).call(this);
