// Generated by CoffeeScript 1.6.3
(function() {
  var BrokenSquare, BrokenSquares,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.BrokenSquaresOps = (function(_super) {
    __extends(BrokenSquaresOps, _super);

    function BrokenSquaresOps(_opts) {
      this.options = _opts;
      this.init();
    }

    BrokenSquaresOps.prototype.init = function() {
      this.destroy();
      this.target = this.options.target || this.options.brokenSqaures || this.options.broken_squares || new BrokenSquares({
        two: this.options.two
      });
      this.two = this.target.two;
      return this.target.on('destroy', (function() {
        return this.destroy();
      }), this);
    };

    BrokenSquaresOps.prototype.destroy = function() {
      return this.target = this.two = void 0;
    };

    BrokenSquaresOps.prototype.randomBreak = function() {
      var _this = this;
      _.each(this.target.broken_squares, function(broken_square) {
        return _.each(broken_square.triangles, function(triangle) {
          if (Math.random() > 0.5) {
            return triangle.opacity = 0.0;
          } else {
            return triangle.opacity = 1.0;
          }
        });
      });
      return setTimeout((function() {
        return _this.randomBreak();
      }), 3000);
    };

    return BrokenSquaresOps;

  })(Backbone.Model);

  BrokenSquares = (function(_super) {
    __extends(BrokenSquares, _super);

    function BrokenSquares(_opts) {
      this.options = _opts;
      this.two = _opts.two;
      this.init();
    }

    BrokenSquares.prototype.init = function() {
      var _this = this;
      this.destroy();
      this.group = this.two.makeGroup();
      this.broken_squares = this._createBrokenSquares();
      return _.each(this.broken_squares, function(broken_square) {
        return broken_square.group.addTo(_this.group);
      });
    };

    BrokenSquares.prototype.destroy = function() {
      this.trigger('destroy', this);
      if (this.broken_squares) {
        _.each(this.broken_squares, function(broken_square) {
          return broken_square.destroy();
        });
        this.broken_squares = void 0;
      }
      if (this.group) {
        this.two.remove(this.group);
        return this.group = void 0;
      }
    };

    BrokenSquares.prototype.colSpacing = function() {
      return this.options.colSpacing || 30;
    };

    BrokenSquares.prototype.rowSpacing = function() {
      return this.options.rowSpacing || 30;
    };

    BrokenSquares.prototype._createBrokenSquares = function() {
      var bSquare, broken_squares, x, y;
      broken_squares = [];
      y = 0;
      while (y < this.two.height) {
        x = 0;
        while (x < this.two.width) {
          bSquare = new BrokenSquare({
            two: this.two
          });
          bSquare.group.translation.set(x, y);
          broken_squares = _.union(broken_squares, [bSquare]);
          x += bSquare.width() + this.colSpacing();
        }
        y += bSquare.height() + this.rowSpacing();
      }
      return broken_squares;
      return [
        new BrokenSquare({
          two: this.two
        })
      ];
    };

    return BrokenSquares;

  })(Backbone.Model);

  BrokenSquare = (function(_super) {
    __extends(BrokenSquare, _super);

    function BrokenSquare(_opts) {
      this.options = _opts;
      this.two = _opts.two;
      this.init();
    }

    BrokenSquare.prototype.init = function() {
      var _this = this;
      this.destroy();
      this.group = this.two.makeGroup();
      this.triangles = this._createTriangles();
      _.each(this.triangles, function(triangle) {
        return triangle.addTo(_this.group);
      });
      this.group.fill = '#FFFFFF';
      return this.group.noStroke();
    };

    BrokenSquare.prototype.destroy = function() {
      var _this = this;
      this.trigger('destroy');
      if (this.triangles) {
        _.each(this.triangles, function(triangle) {
          return _this.two.remove(triangle);
        });
        this.triangles = void 0;
      }
      if (this.group) {
        this.two.remove(this.group);
        return this.group = void 0;
      }
    };

    BrokenSquare.prototype.width = function() {
      return this.options.width || 50;
    };

    BrokenSquare.prototype.height = function() {
      return this.options.height || 50;
    };

    BrokenSquare.prototype.coords = function() {
      return [new Two.Anchor(0, 0), new Two.Anchor(this.width() / 2, 0), new Two.Anchor(this.width(), 0), new Two.Anchor(0, this.height() / 2), new Two.Anchor(this.width() / 2, this.height() / 2), new Two.Anchor(this.width(), this.height() / 2), new Two.Anchor(0, this.height()), new Two.Anchor(this.width() / 2, this.height()), new Two.Anchor(this.width(), this.height())];
    };

    BrokenSquare.prototype._createTriangles = function() {
      var coords;
      coords = this.coords();
      return [new Two.Polygon([coords[0], coords[4], coords[3]], false, false), new Two.Polygon([coords[0], coords[1], coords[4]], false, false), new Two.Polygon([coords[1], coords[2], coords[4]], false, false), new Two.Polygon([coords[2], coords[4], coords[5]], false, false), new Two.Polygon([coords[3], coords[4], coords[6]], false, false), new Two.Polygon([coords[4], coords[6], coords[7]], false, false), new Two.Polygon([coords[4], coords[7], coords[8]], false, false), new Two.Polygon([coords[4], coords[5], coords[8]], false, false)];
    };

    return BrokenSquare;

  })(Backbone.Model);

}).call(this);
