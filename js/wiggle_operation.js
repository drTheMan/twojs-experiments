// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.WiggleOperation = (function(_super) {
    __extends(WiggleOperation, _super);

    function WiggleOperation() {
      _ref = WiggleOperation.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    WiggleOperation.prototype.defaults = {
      'counter': 0,
      'strength': 1,
      'speed': 0.4,
      'alive': true,
      'particles': []
    };

    WiggleOperation.prototype.update = function() {
      var i,
        _this = this;
      i = 0;
      _.each(this.get('particles'), function(particle) {
        particle.translation.addSelf(_this._curTranslation(i));
        return i++;
      });
      if (this._curOffset() >= Math.PI * 2) {
        this.set({
          alive: false
        });
      }
      return this.set({
        counter: this.get('counter') + 1
      });
    };

    WiggleOperation.prototype._curOffset = function() {
      return this.get('counter') * this.get('speed');
    };

    WiggleOperation.prototype._curTranslation = function(idx) {
      var strength;
      strength = this.get('strength');
      return new Two.Vector(Math.sin(this._curOffset() + idx * 0.2) * strength, 0);
    };

    return WiggleOperation;

  })(Backbone.Model);

}).call(this);
